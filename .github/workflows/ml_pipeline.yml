name: ML Pipeline with DVC

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  ml-pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # ✅ PERBAIKAN: Sintaks kondisi yang benar
    - name: Configure Kaggle
      if: ${{ env.KAGGLE_USERNAME != '' && env.KAGGLE_KEY != '' }}
      env:
        KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
        KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
      run: |
        mkdir -p ~/.kaggle
        echo '{"username":"'$KAGGLE_USERNAME'","key":"'$KAGGLE_KEY'"}' > ~/.kaggle/kaggle.json
        chmod 600 ~/.kaggle/kaggle.json

    - name: Setup DVC
      run: |
        dvc --version
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"

    - name: Cache DVC
      uses: actions/cache@v3
      with:
        path: .dvc/cache
        key: ${{ runner.os }}-dvc-${{ hashFiles('**/dvc.lock') }}
        restore-keys: |
          ${{ runner.os }}-dvc-

    - name: Run DVC Pipeline
      run: |
        dvc repro --force

    - name: Run Manual Pipeline (Fallback)
      if: failure()
      run: |
        echo "DVC failed, running manual pipeline..."
        python run_pipeline.py

    - name: Validate Pipeline Results
      run: |
        ls -la models/ || echo "models directory not found"
        ls -la data/processed/ || echo "processed data not found"
        python -c "
        import os
        required_files = [
          'data/processed/processed_data.csv',
          'training_results.json'
        ]
        for file in required_files:
          if os.path.exists(file):
            print(f'✅ {file}')
          else:
            print(f'❌ {file} - but continuing...')
        "

    - name: Upload ML Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ml-pipeline-results
        path: |
          models/
          data/processed/
          training_results.json
          evaluation_results.json
          *.png
          dvc.lock
        retention-days: 30

    - name: Upload MLflow Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mlflow-experiments
        path: |
          mlruns/
        retention-days: 7